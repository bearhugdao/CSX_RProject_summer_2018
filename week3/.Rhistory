q()
q()
library("permute", lib.loc="~/R/win-library/3.4")
randall(n=6,nmat=3,ord=(c(1,2,3,2,1,1,2,3,2,1,2,3,1,2,1)),input="inputfile.txt",(“sample1”,”sample2”,”sample3”)))
library("permute", lib.loc="~/R/win-library/3.4")
install.packages("cirfit")
knitr::opts_chunk$set(echo = TRUE)
car
iris
iris
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_bar(setosa = "setosa", versicolor = "versicolor")
install.packages("ggplotㄉ")
install.packages("ggplot2")
install.packages("GGally")
install.packages("scales")
install.packages("memisc")
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_bar(setosa = "setosa", versicolor = "versicolor")
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram()
ggplot(data = diamonds, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot2(data = diamonds, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
install.packages(c("stringi", "tinytex"))
ggplot(data = iris, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_bar(setosa, versicolor)
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_bar("setosa", "versicolor")
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = iris, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_boxplot()
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram()
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram()
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = iris, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
plot(pressure)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, group=Species)) +
geom_boxplot()
ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_boxplot()
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
map <- get_map(location = 'Taiwan', zoom = 7,
language = "zh-TW")
install.packages("ggmap")
ggmap(map, darken = c(0.5, "white")) +
geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
install.packages("stringi")
install.packages("ggmap")
uv <- read.csv("UV_20151116152215.csv")
source('~/.active-rstudio-document')
uv <- read.csv(C:\Users\YANGTAOYUAN\Desktop"UV_20151116152215.csv")
uv <- read.csv(C:\Users\YANGTAOYUAN\Desktop\UV_20151116152215.csv)
uv <- read.csv("C:\Users\YANGTAOYUAN\Desktop\UV_20151116152215.csv")
uv <- read.csv("C:/Users/YANGTAOYUAN/Desktop/UV_20151116152215.csv")
uv <- read.csv(C:/Users/YANGTAOYUAN/Desktop/UV_20151116152215.csv)
uv <- read.csv("C:/Users/YANGTAOYUAN/Desktop/UV_20151116152215.csv", header=T, sep=",")
ggmap(map) + geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
install.packages("ggmap")
lon.deg <- sapply((strsplit(as.character(uv$WGS84Lon), ",")), as.numeric)
install.packages("GlobalEnv")
install.packages("GlobalEnv")
source('~/.active-rstudio-document')
getwd(0711-lab.csv)
getwd(0711-lab)
uv <- read.csv("C:/User/user/Desktop/0711-lab.csv")
uv <- read.csv("C:/Users/YANGTAOYUAN/Desktop/0711-lab.csv")
View(uv)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
install.packages("ggmap")
ggmap(map) +
geom_point(aes(x = lon, y = lat, size = UVI), data = uv) +
facet_grid( ~ PublishAgency)
install.packages("ggmap")
install.packages("stringi")
facet_grid( ~ PublishAgency)
install.packages("facet_grid")
ggmap(map) + geom_point(aes(x = lon, y = lat, size = UVI), data = uv)
library(ggmap)
library(ggmap)
install.packages("maps")
library(ggmap)
source('~/.active-rstudio-document')
View(lon.deg)
setwd("~/")
install.packages("ggplots")
install.packages("ggplot2")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point()
library(ggplot)
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("ggmap", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
library("stringr", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
ggplot(data = iris, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
setwd("~/")
setwd("~/")
mapply(pttTestFunction,
URL = URL, filename = filename)
install.packages("pttTestFunction")
pttTestFunction <- function(URL, filename)
{
#URL   = "https://www.ptt.cc/bbs/NTUcourse/index.html"
html  = read_html(URL)
title = html_nodes(html, "a")
href  = html_attr(title, "href")
data = data.frame(title = toUTF8(html_text(title)),
href = href)
data = data[-c(1:10),]
getContent <- function(x) {
url  = paste0("https://www.ptt.cc", x)
tag  = html_node(read_html(url), 'div#main-content.bbs-screen.bbs-content')
text = toUTF8(html_text(tag))
}
#getContent(data$href[1])
allText = sapply(data$href, getContent)
allText
#out <- file(filename, "w", encoding="BIG-5")
write.table(allText, filename)
#close(out)
}
library("stringr", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
install.packages("tmcn")
install.packages("rvest")
source('pttTestFunction.R')
source('pttTestFunction.R')
id = c(1328:1334)
URL = paste0("https://www.ptt.cc/bbs/WorldCup/index", id, ".html")
filename = paste0(id, ".txt")
filename = paste0(id, ".txt")
library("stringr", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
install.packages("pttTestFunction.R")
View(pttTestFunction)
View(pttTestFunction)
mapply(pttTestFunction,
URL = URL, filename = filename)
library("stringr", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
library(Hmisc)
library(knitr)
library(ggplot2)
library(dplyr)
library(caret)
library(randomForest)
library(gridExtra)
library(ROCR)
library(corrplot)
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
#讀取test與train兩筆資料
test <- read.csv("DATA/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
setwd("~/GitHub/CSX_RProject_summer_2018/week3")
library(Hmisc)
library(knitr)
library(ggplot2)
library(dplyr)
library(caret)
library(randomForest)
library(gridExtra)
library(ROCR)
library(corrplot)
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
#讀取test與train兩筆資料
test <- read.csv("DATA/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- read.csv("DATA/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
#讀取test與train兩筆資料
test <- read.csv("DATA2/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- read.csv("DATA2/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
library(Hmisc)
library(knitr)
library(ggplot2)
library(dplyr)
library(caret)
library(randomForest)
library(gridExtra)
library(ROCR)
library(corrplot)
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
#讀取test與train兩筆資料
test <- read.csv("DATA2/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- read.csv("DATA2/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
#show出test資料
str(test)
#418 obs. of  11 variables
#show出train資料
str(train)
#891 obs. of  12 variables
library(Hmisc)
library(knitr)
library(ggplot2)
library(dplyr)
library(caret)
library(randomForest)
library(gridExtra)
library(ROCR)
library(corrplot)
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
#讀取test與train兩筆資料
test <- read.csv("DATA2/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- read.csv("DATA2/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
#show出test資料
str(test)
#418 obs. of  11 variables
#show出train資料
str(train)
#891 obs. of  12 variables
#合併兩筆資料
test$Survived <- NA
allpeople <- rbind(train, test)
str(allpeople)
#看一下原始表格
class(allpeople)
View(allpeople)
#描述統計表單
sapply(allpeople, function(x) {sum(is.na(x))})
allpeople$Title <- gsub('(.*, )|(\\..*)','',allpeople$Name)
View(allpeople)
Names = allpeople$Name
splitTitle <- function(x){
strsplit(x, split='[,.]')[[1]]
}
Temp = sapply(as.character(Names), splitTitle)
#整理資料成統一格式
allpeople$Title[allpeople$Title=="Mlle"] <- "Miss"
allpeople$Title[allpeople$Title=="Ms"] <- "Miss"
#也可用allpeople$Title[all$Title %in% c("Mlle", "Ms")] <- "Miss"
allpeople$Title[allpeople$Title=="Mme"] <- "Mrs"
#整理少數稱呼成少數稱謂
allpeople$Title[!(allpeople$Title %in% c('Master', 'Miss', 'Mr', 'Mrs'))] <- "Rare Title"
#也可用 rare_titles <- c("Don","Rev","Major","Lady","Sir","Capt","Col","Jonkheer","the Countess")
#allpeople$Title[match(rare_titles,train_file_titanic$Title)] <- "Rare Title"
View(allpeople)
#統計性別跟Title關係
kable(table(allpeople$Sex, allpeople$Title))
#女性有265人為Miss,198人為Mrs,3人為少數稱謂
#男性有61為Master,758為Mr,24為少數稱謂
ggplot(allpeople[!is.na(allpeople$Survived),], aes(x = Survived, fill = Survived)) +
geom_bar(stat='count') +
labs(x = '多少人活了下來?') +
geom_label(stat='count',aes(label=..count..), size=7) +
theme_grey(base_size = 18)
ggplot(allpeople[!is.na(allpeople$Sex),], aes(x = Sex, fill = Sex)) +
geom_bar(stat='count') +
labs(x = '男女比例?') +
geom_label(stat='count',aes(label=..count..), size=7) +
theme_grey(base_size = 18)
ggplot(allpeople, aes(x = Sex, fill = Sex)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = '男女比例') +
geom_label(stat='count', aes(label=..count..), size=7) +
theme_grey(base_size = 18) +
scale_fill_manual("legend", values = c("female" = "lightpink", "male" = "dodgerblue"))
ggplot(allpeople[!is.na(allpeople$Survived),], aes(x = Sex, fill = Survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = '死人男女比') +
geom_label(stat='count', aes(label=..count..))
setwd("~/GitHub/CSX_RProject_summer_2018/week3")
ggplot(allpeople[!is.na(allpeople$Survived),], aes(x = Sex, fill = Survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = '死人男女比') +
geom_label(stat='count', aes(label=..count..))
library(Hmisc)
library(knitr)
library(ggplot2)
library(dplyr)
library(caret)
library(randomForest)
library(gridExtra)
library(ROCR)
library(corrplot)
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
#讀取test與train兩筆資料
test <- read.csv("DATA/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- read.csv("DATA/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
#讀取test與train兩筆資料
test <- read.csv("DATA2/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
train <- read.csv("DATA2/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
#show出test資料
str(test)
#418 obs. of  11 variables
#show出train資料
str(train)
#891 obs. of  12 variables
#合併兩筆資料
test$Survived <- NA
allpeople <- rbind(train, test)
str(allpeople)
#看一下原始表格
class(allpeople)
View(allpeople)
#描述統計表單
sapply(allpeople, function(x) {sum(is.na(x))})
allpeople$Title <- gsub('(.*, )|(\\..*)','',allpeople$Name)
View(allpeople)
Names = allpeople$Name
splitTitle <- function(x){
strsplit(x, split='[,.]')[[1]]
}
Temp = sapply(as.character(Names), splitTitle)
#整理資料成統一格式
allpeople$Title[allpeople$Title=="Mlle"] <- "Miss"
allpeople$Title[allpeople$Title=="Ms"] <- "Miss"
#也可用allpeople$Title[all$Title %in% c("Mlle", "Ms")] <- "Miss"
allpeople$Title[allpeople$Title=="Mme"] <- "Mrs"
#整理少數稱呼成少數稱謂
allpeople$Title[!(allpeople$Title %in% c('Master', 'Miss', 'Mr', 'Mrs'))] <- "Rare Title"
#也可用 rare_titles <- c("Don","Rev","Major","Lady","Sir","Capt","Col","Jonkheer","the Countess")
#allpeople$Title[match(rare_titles,train_file_titanic$Title)] <- "Rare Title"
View(allpeople)
#統計性別跟Title關係
kable(table(allpeople$Sex, allpeople$Title))
#女性有265人為Miss,198人為Mrs,3人為少數稱謂
#男性有61為Master,758為Mr,24為少數稱謂
ggplot(allpeople[!is.na(allpeople$Survived),], aes(x = Survived, fill = Survived)) +
geom_bar(stat='count') +
labs(x = '多少人活了下來?') +
geom_label(stat='count',aes(label=..count..), size=7) +
theme_grey(base_size = 18)
