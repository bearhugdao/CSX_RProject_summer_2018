#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(rsconnect)
library(shiny)
library(ggplot2)

dta <- read.csv("data/college3.csv", header = TRUE)
choice.type <-
  c('學校類型', '設立別', '123 個學類', '學類所屬學群名稱','縣市名稱','體系別')

choice.value <-
  c(
    '學生數',
    '教師數',
    '師生比',
    '人數下滑率',
    '延畢率',
    '專任助理教授以上之比例'
  )

ui <- navbarPage(
  "大學教育資料",

    tabPanel(
    "背景介紹",
    tags$h1("大學相關資料查詢與研究"),
    tags$p("簡單描述")
    #HTML("<img height=600 src=\"https://78.media.tumblr.com/aa70ed84a7cd2e7b83c36118dfb2c0e5/tumblr_p8xzq1U8ik1qhy6c9o1_500.gif\"/>")
  ),
  
  tabPanel(
    "原始資料",
    tags$h1("分析與呈現的所有資料"),
    br(),
    fluidRow(column(
      8,
      tabPanel("Table",
               DT::dataTableOutput("data.raw"))
    ))
  ),
  
  
  tabPanel(
    "挑選變項",
    tags$h1("看一看自己感興趣的指標吧"),
    br(),
    sidebarLayout(
      sidebarPanel(
        selectInput('SV.input', 'type', c(choice.type, choice.value), selectize = TRUE)
      ),
      mainPanel(plotOutput("SV.plot"))
    ),
    
    tags$h1("摘要"),
    verbatimTextOutput("summary")
    
  ),
  
  tabPanel(
    "交叉比較.",
    tags$h1("Box Plot"),
    sidebarLayout(
      sidebarPanel(
        selectInput('PA.type', 'type', choice.type, selectize = TRUE),
        selectInput('PA.value', 'Value', choice.value, selectize =
                      TRUE)
      ),
      mainPanel(plotOutput("PA.plot"))
    ),
    h1("T Test / ANOVA"),
    verbatimTextOutput("t.test.anova")
  ),
  
  # tabPanel("Summary"),
 
  tabPanel(
    "分布圖比較.", 
  titlePanel("看看感興趣的資料分佈"),
  
  numericInput('大考中心學類編號', '大考中心學群編號', 3, min = 1, max = 9),
  
  # Sidebar with a slider input for number of bins 
  sidebarLayout(
    sidebarPanel(
      sliderInput("大考中心學類編號",
                  "大考中心學類編號",
                  min = 1,
                  max = 123,
                  value = 30)
 ),
    
    # Show a plot of the generated distribution
    mainPanel(
      plotOutput("distPlot"),
      plotOutput("distPlot2")
      
    )
  )),
  
  
  navbarMenu("More",
             plotOutput("plot"))
)

server <- function(input, output, session) {
  output$SV.plot <- renderPlot({
    if( is.element(input$SV.input, choice.type) ){
      ggplot(data = dta, aes_string(x = input$SV.input)) +
        geom_bar() +
        labs(y = "count", x = input$SV.input)
    }
    else{
      ggplot(data = dta, aes_string(x = input$SV.input)) +
        geom_histogram() +
        labs(y = "count", x = input$SV.input)
    }
  })
  
  output$PA.plot <- renderPlot({
    ggplot(data = dta, aes_string(x = input$PA.type, y = input$PA.value)) +
      geom_boxplot() + coord_flip() +
      labs(y = input$PA.value, x = input$PA.type)
    
  })
  
  output$summary <- renderPrint({
    summary(dta)
  })
  
  output$t.test.anova <- renderPrint({
    type = unlist(dta[input$PA.type])
    value = unlist(dta[input$PA.value])
    if (length(levels(type)) == 2){
      t.test( value ~ type )
    } else {
      anova( lm(value ~ type) )
    }
  })
  
  output$data.raw <- DT::renderDataTable({
    DT::datatable(dta)
  })
  
  output$data.summary <- DT::renderDataTable({
    DT::datatable(summary(dta))
  })

    output$distPlot <- renderPlot({
      # generate bins based on input$bins from ui.R
      延畢人數    <- faithful[, 2] 
      a    <- input$大考中心學類編號
      b    <- input$延畢人數
      print(a)
      print(b)
      學類編號 <- seq(min(延畢人數), max(延畢人數), length.out = input$大考中心學類編號 + 1)
      
      # draw the histogram with the specified number of bins
      hist(延畢人數, breaks = 學類編號, col = 'darkgray', border = 'white')
    })
  
  }




# Run the application 
shinyApp(ui = ui, server = server)

